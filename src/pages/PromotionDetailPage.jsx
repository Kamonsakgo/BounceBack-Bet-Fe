import { useEffect, useState } from 'react'
import { useParams, useNavigate } from 'react-router-dom'
import apiService from '../services/api'
import './PromotionDetailPage.css'

function PromotionDetailPage() {
  const { id } = useParams()
  const navigate = useNavigate()
  const [data, setData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  const parseSettings = (raw) => {
    if (!raw) return {}
    if (typeof raw === 'string') {
      try { return JSON.parse(raw) } catch { return {} }
    }
    return raw
  }

  useEffect(() => {
    const load = async () => {
      try {
        setLoading(true)
        const res = await apiService.getPromotion(id)
        setData(res)
      } catch (e) {
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏î‡πâ')
      } finally {
        setLoading(false)
      }
    }
    load()
  }, [id])

  if (loading) {
    return (
      <div className="promotion-detail-page">
        <div className="loading-container">
          <div className="loading-spinner"></div>
          <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô...</p>
        </div>
      </div>
    )
  }

  if (error || !data) {
    return (
      <div className="promotion-detail-page">
        <div className="error-container">
          <h2>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h2>
          <p>{error || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô'}</p>
          <button onClick={() => navigate('/')} className="retry-btn">‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</button>
        </div>
      </div>
    )
  }

  const settings = parseSettings(data.settings)
  const tiers = Array.isArray(settings.tiers) ? [...settings.tiers].sort((a,b) => (a.pairs||0)-(b.pairs||0)) : []
  const betTypes = settings.betting_types || []
  const marketTypes = settings.market_types || []

  const fmtDate = (d) => d ? new Date(d).toLocaleString('th-TH') : '‚Äî'

  const currency = (v) => v == null ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : new Intl.NumberFormat('th-TH', { style: 'currency', currency: 'THB' }).format(v)

  return (
    <div className="promotion-detail-page">
      <div className="page-header">
        <button className="back-btn" onClick={() => navigate('/')}>‚Üê ‡∏Å‡∏•‡∏±‡∏ö</button>
        <div>
          <h2>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô: {data.name}</h2>
          <p>‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</p>
        </div>
      </div>

      <div className="form-container">
        <div className="promotion-form">
          <div className="form-section">
            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</h3>
            <div className="info-grid">
              <div className="info-item"><strong>ID</strong><div>{data.id}</div></div>
              <div className="info-item"><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</strong><div>{data.type}</div></div>
              <div className="info-item"><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</strong><div>{data.is_active ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'}</div></div>
              <div className="info-item"><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</strong><div>{data.priority}</div></div>
              <div className="info-item"><strong>‡πÄ‡∏£‡∏¥‡πà‡∏°</strong><div>{fmtDate(data.starts_at)}</div></div>
              <div className="info-item"><strong>‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</strong><div>{fmtDate(data.ends_at)}</div></div>
            </div>
          </div>

          <div className="form-section">
            <h3>‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</h3>
            {tiers.length > 0 && (
              <div style={{ marginBottom: 12 }}>
                <strong>‡πÅ‡∏û‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏π‡πà‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</strong>
                <ul style={{ margin: 6, paddingLeft: 20 }}>
                  {tiers.map((t, i) => (
                    <li key={i}>{t.pairs} ‡∏Ñ‡∏π‡πà = {t.multiplier}x</li>
                  ))}
                </ul>
              </div>
            )}
            <div className="info-grid">
              {settings.min_odds != null && <div className="info-item"><strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</strong><div>{settings.min_odds}</div></div>}
              {settings.min_stake != null && <div className="info-item"><strong>‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</strong><div>{settings.min_stake}</div></div>}
              {settings.max_refund_amount != null && <div className="info-item"><strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</strong><div>{currency(settings.max_refund_amount)}</div></div>}
              {settings.refund_delay_hours != null && <div className="info-item"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ä‡∏°.)</strong><div>{settings.refund_delay_hours}</div></div>}
            </div>
            {betTypes.length > 0 && (
              <div style={{ marginTop: 12 }}>
                <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏µ‡∏¨‡∏≤</strong>
                <div className="betting-types-display" style={{ marginTop: 6 }}>
                  {betTypes.map((t) => {
                    const labels = { 'all': 'üéØ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 'football': '‚öΩ ‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•', 'boxing': 'ü•ä ‡∏°‡∏ß‡∏¢' }
                    return <span key={t} className="betting-type-tag">{labels[t] || t}</span>
                  })}
                </div>
              </div>
            )}
            {marketTypes.length > 0 && (
              <div style={{ marginTop: 12 }}>
                <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô</strong>
                <div className="betting-types-display" style={{ marginTop: 6 }}>
                  {marketTypes.map((t) => {
                    const labels = { 'all': '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', 'handicap': '‡πÅ‡∏Æ‡∏ô‡∏î‡∏¥‡πÅ‡∏Ñ‡∏õ', 'over_under': '‡∏™‡∏π‡∏á/‡∏ï‡πà‡∏≥', '1x2': '1X2' }
                    return <span key={t} className="betting-type-tag">{labels[t] || t}</span>
                  })}
                </div>
              </div>
            )}
            {settings.match_periods && settings.match_periods.length > 0 && (
              <div style={{ marginTop: 12 }}>
                <strong>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô</strong>
                <div className="betting-types-display" style={{ marginTop: 6 }}>
                  {settings.match_periods.map((period) => {
                    const labels = { 'first_half': '‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡πÅ‡∏£‡∏Å', 'second_half': '‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏•‡∏±‡∏á', 'full_time': '‡πÄ‡∏ï‡πá‡∏°‡πÄ‡∏ß‡∏•‡∏≤', 'all': '‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤' }
                    return <span key={period} className="betting-type-tag">{labels[period] || period}</span>
                  })}
                </div>
              </div>
            )}
          </div>

          <div className="form-section">
            <h3>‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h3>
            <div className="info-grid">
              <div className="info-item"><strong>‡∏£‡∏ß‡∏°‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</strong><div>{data.user_limit_total || '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î'}</div></div>
              <div className="info-item"><strong>‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</strong><div>{data.user_limit_per_day || '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î'}</div></div>
            </div>
          </div>

          <div className="form-section">
            <h3>‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏£‡∏ß‡∏°</h3>
            <div className="info-grid">
              <div className="info-item"><strong>‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤‡∏£‡∏ß‡∏°</strong><div>{data.global_quota ?? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î'}</div></div>
              <div className="info-item"><strong>‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏ß‡∏°</strong><div>{currency(data.global_budget)}</div></div>
            </div>
          </div>

          <div className="form-section">
            <h3>‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢</h3>
            <div className="info-grid">
              <div className="info-item"><strong>‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ö‡∏¥‡∏•</strong><div>{currency(data.max_payout_per_bill)}</div></div>
              <div className="info-item"><strong>‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô</strong><div>{currency(data.max_payout_per_day)}</div></div>
              <div className="info-item"><strong>‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</strong><div>{currency(data.max_payout_per_user)}</div></div>
            </div>
          </div>

          <div className="form-section">
            <h3>‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤</h3>
            <div className="info-grid">
              <div className="info-item"><strong>‡∏ß‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</strong><div>{data.schedule_days && data.schedule_days !== '[]' ? data.schedule_days : '‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô'}</div></div>
              <div className="info-item"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°</strong><div>{data.schedule_start_time ?? '‚Äî'}</div></div>
              <div className="info-item"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</strong><div>{data.schedule_end_time ?? '‚Äî'}</div></div>
            </div>
          </div>

          <div className="form-section">
            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h3>
            <div className="info-grid">
              <div className="info-item"><strong>‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ</strong><div>{data.is_stackable ? '‡πÉ‡∏ä‡πà' : '‡πÑ‡∏°‡πà'}</div></div>
              <div className="info-item"><strong>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠</strong><div>{fmtDate(data.created_at)}</div></div>
              <div className="info-item"><strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏°‡∏∑‡πà‡∏≠</strong><div>{fmtDate(data.updated_at)}</div></div>
              {data.deleted_at && <div className="info-item"><strong>‡∏•‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠</strong><div>{fmtDate(data.deleted_at)}</div></div>}
            </div>
          </div>

          <div className="form-actions" style={{ justifyContent: 'flex-end' }}>
            <button className="cancel-btn" onClick={() => navigate(`/edit-promotion/${data.id}`)}>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏ô‡∏µ‡πâ</button>
          </div>
        </div>
      </div>
    </div>
  )
}

export default PromotionDetailPage


